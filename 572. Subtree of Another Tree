/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool checkTree(TreeNode* root1,TreeNode* root2)
    {
        if(!root1 && !root2) return true;
        if(!root1 || !root2) return false;
        
        return (root1->val == root2->val && checkTree(root1->left, root2->left) && checkTree(root1->right, root2->right));
    }
    bool isSubtree(TreeNode *root, TreeNode* subRoot)
    {
        return checkTree(root, subRoot) || 
            (root->left && isSubtree(root->left, subRoot)) ||
            (root->right && isSubtree(root->right, subRoot));
    }
};
