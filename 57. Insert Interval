class Solution {
public:
    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {
//         intervals.push_back(newInterval);
//         sort(intervals.begin(),intervals.end());
        
//         int n=intervals.size();
        
//         vector<vector<int>> ans;
//         ans.push_back(intervals[0]);
        
//         int j=0;
//         for(int i=1;i<n;i++)
//         {
//             if(ans[j][1] >= intervals[i][0])
//             {
//                 if(ans[j][1] <= intervals[i][1]) ans[j][1]=intervals[i][1];
//             }
//             else
//             {
//                 ans.push_back(intervals[i]);
//                 j++;
//             }
//         }
//         return ans;
        
        
        vector<vector<int>> ans;
        
        int n=intervals.size(),i=0;
        while(i<n && newInterval[0] > intervals[i][1])
        {
            ans.push_back(intervals[i]);
            i++;
        }
        
        while(i<n && intervals[i][0] <= newInterval[1])
        {
            newInterval[0]=min(newInterval[0],intervals[i][0]);
            newInterval[1]=max(newInterval[1],intervals[i][1]);
            
            i++;
        }
        
        ans.push_back(newInterval);
        
        while(i<n)
        {
            ans.push_back(intervals[i]);
            i++;
        }
        return ans;
    }
};
