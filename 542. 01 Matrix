class Solution {
public:
    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {
        int n=mat.size();
        int m=mat[0].size();
        
        vector<vector<int>> grid(n,vector<int>(m,0));
        vector<vector<int>> vis(n,vector<int>(m,0));
        
        queue<pair<int,pair<int,int>>> q;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(mat[i][j] == 0)
                {
                    q.push({0 ,{i,j}});
                    vis[i][j]=0;
                }
                else
                {
                    vis[i][j]=1;
                }
            }
        }
        
        while(!q.empty())
        {
            auto it=q.front();
            q.pop();
            
            int node=it.first;
            int row=it.second.first;
            int col=it.second.second;
            
            grid[row][col]=node;
            
            int dr[]={-1,0,+1,0};
            int dc[]={0,+1,0,-1};
            for(int i=0;i<4;i++)
            {
                int n_row=row+dr[i];
                int n_col=col+dc[i];
                
                if(n_row>=0 && n_row<n && n_col>=0 && n_col<m && vis[n_row][n_col]!=0)
                {
                    vis[n_row][n_col]=0;
                    q.push({node+1,{n_row,n_col}});
                }
            }
        }
        return grid;
    }
};
